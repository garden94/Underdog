시작배경 
 c언어를 공부하는데 콘솔 창이 아닌 화면을 띄우는 방법을 찾다가 window application을 활용
여러 알고리즘을 구현했다. (정렬 방식 및 검색 방식, 재귀 함수 등)

사용법
  process
   1) 이동하기 : Source Data에 있는 자료를 Result Dat로 이동시킨다.
   2) 1더하기 : Source Data에 있는 자료를 1를 더해서 Result Data로 이동시킨다.
   3) 최대값 구하기 : Source Data에 있는 자료에서 최대값과 최대값 위치를 구한다.
   4) 검색할 수 입력하기 : 찾고 싶은 수를 입력만 한다.
   5) 선형 데이터 검색하기 : 4)에서 입력한 수를 위치와 비교 횟수를 보여준다.
   6) 이진 데이터 검색하기 : 순차적으로 정렬된 Source Data를 4)에서 입력한 수를 위치와 비교 횟수를 보여준다.

  Sorting
   1) 버블정렬 : Source Data에 있는 자료를 버블 정렬을 해서 Result Data에 출력한다.
   2) 선택정렬 : Source Data에 있는 자료를 선택 정렬을 해서 Result Data에 출력한다.
   3) 삽입정렬 : Source Data에 있는 자료를 삽입 정렬을 해서 Result Data에 출력한다.

  Recursive
   1) 계산할 값 입력하기 : 계산할 숫자를 입력만 한다.
   2) n까지 합 구하기 : 1)에서 입력한 숫자만큼의 합을 구한다.
   3) 피보나치수 구하기 : 1)에서 입력한 숫자의 항만큼 피보나치 수를 구한다.
   4) 이진검색(재귀) : Process에 있는 4)에서 입력받은 수를 이진 검색(재귀)로 하여 Result Data에 출력한다.
   5) 하노이탑 풀이 : 1)에서 입력한 숫자만큼의 원반을 C축으로 이동하는 과정을 출력한다.
   6) 퀵(Quick) 소트 : 

  Struct
-> Source Data에 정보를 입력할 때, 학생 번호, 학생이름, 점수 3개 순으로 입력을 한다.
   1) 학생정보읽기(총점) : Source Data에 있는 정보를 Result Data에 출력을 하고 총점도 계산한다.
   2) 이름으로 정렬하기 : Source Data에 있는 정보를 이름 순으로 정렬을 하여 Result Data에 출력을 한다.
   3) 총점으로 정렬하기 : Source Data에 있는 정보를 총점이 높은 순으로 정렬을 하여 Result Data에 출력을 한다.
   4) 파일에서 바로 읽기 : 외부에 텍스트 파일에 있는 정보를 Source Data 창에 출력을 한다.
      단) student 구조체에 맞는 텍스트 파일만 읽을 수 있다.
   5) 정렬된 데이터에 멤버 추가하기 : 기존 정렬된 정보에다가 외부 정보를 추가한다.
   6) 삭제할 이름은? : 삭제할 이름을 받는다.
   7) 입력한 학생 정보 삭제하기 : 6)에서 입력 받은 학생을 Source Data에서 삭제한다.

  List(학생을 배열이 아닌 리스트 구조로 한 거) 
   1) edit창에서 학생 정보 읽기 (List) : Source Data에 있는 정보를 Result Data에 출력한다.
   2) 정렬된 파일에서 바로 읽기 (List) : 외부 파일에서 자료를 가지고 와 Source Data창에 출력한다.
   3) 정렬된 데이터에 멤버 추가하기 (List) : 정렬된 데이터에 외부 파일에 있는 멤버를 추가하여 Result data에 출력.
   4) 입력한 학생 정보 삭제하기 (List) : structdml 6)을 입력하고 그 입력한 멤버를 삭제한다.

  Btree
   1) 이진 트리 생성 : Source Data에 있는 숫자를 이진 트리 시켜서 Result Data에 출력한다.
   2) 너비 우선 탐색(Btree) : 너비 우선 탐색함
   3) 깊이 우선 탐색(Btree) : 깊이 우선 탐색함
   4) 트리에서 값 찾기(Btree) : Process메뉴의 4)을 입력하고 그 값이 있는지 확인한다.
   5) 트리에서 값 삭제하기(Btree) : Process메뉴의 4)을 입력하고 그 값을 삭제한다.



